{{- if not .Values.rbac.only }}
{{- $altNames := list ( printf "agent-injector.%s" .Release.Namespace ) ( printf "agent-injector.%s.svc" .Release.Namespace ) -}}
{{- $genCA := genCA "agent-injector-ca" 365 -}}
{{- $genCert := genSignedCert "agent-injector" nil $altNames 365 $genCA -}}
{{- $secretData := (lookup "v1" "Secret" .Release.Namespace .Values.agentInjector.secret.name).data -}}
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ .Values.agentInjector.webhook.name }}-{{ include "telepresence.namespace" . }}
  labels:
    {{- include "telepresence.labels" . | nindent 4 }}
webhooks:
{{- with .Values.agentInjector.webhook.admissionReviewVersions }}
- admissionReviewVersions:
  {{- toYaml . | nindent 2 }}
{{- end }}
  clientConfig:
{{- if and ($secretData) (not .Values.agentInjector.certificate.regenerate) }}
    caBundle: {{ get $secretData "ca.pem" }}
{{- else }}
    caBundle: {{ $genCA.Cert | b64enc }}
{{- end }}
    service:
      name: {{ .Values.agentInjector.name }}
      namespace: {{ include "telepresence.namespace" . }}
      path: {{ .Values.agentInjector.webhook.servicePath }}
      port: {{ .Values.agentInjector.webhook.port }}
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  failurePolicy: {{ .Values.agentInjector.webhook.failurePolicy }}
  reinvocationPolicy: IfNeeded
  name: agent-injector.getambassador.io
  sideEffects: {{ .Values.agentInjector.webhook.sideEffects }}
  timeoutSeconds: {{ .Values.agentInjector.webhook.timeoutSeconds }}
{{- if .Values.managerRbac.namespaced }}
  namespaceSelector:
    matchExpressions:
      - key: app.kubernetes.io/name
        operator: In
        values:
{{- range .Values.managerRbac.namespaces }}
        - {{ . }}
{{- end }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.agentInjector.secret.name }}
  namespace: {{ include "telepresence.namespace" . }}
  labels:
    {{- include "telepresence.labels" . | nindent 4 }}
data:
{{- if and ($secretData) (not .Values.agentInjector.certificate.regenerate) }}
  ca.pem: {{ get $secretData "ca.pem" }}
  crt.pem: {{ get $secretData "crt.pem" }}
  key.pem: {{ get $secretData "key.pem" }}
{{- else }}
  ca.pem: {{ $genCA.Cert | b64enc }}
  crt.pem: {{ $genCert.Cert | b64enc }}
  key.pem: {{ $genCert.Key | b64enc }}
{{- end }}
{{- end }}